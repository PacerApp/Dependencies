default_platform(:ios)

project_name="DependencyInjection"
package = "DependencyInjection"

platform :ios do
  before_all do |lane, options|
    prepare
  end

  desc "Prepares the project"
  lane :prepare do
    download_repo
    sh("cp -r ../project.yml DependencyInjection/")
    sh("cp -r ../Info.plist DependencyInjection/Sources")
    sh("rm -rf iOS-Configuration")
    sh("cd DependencyInjection && xcodegen")
  end

  desc "Generates the xcframework"
  lane :export_xcframework do |options|
    sh("rm -rf ../Products")
    create_xcframework(
      scheme: options[:scheme],
      workspace: "fastlane/DependencyInjection/DependencyInjection.xcodeproj/project.xcworkspace",
      include_dSYMs: true,
      include_BCSymbolMaps: false,
      include_debug_symbols: true,
      enable_bitcode: true,
      destinations: ['iOS', 'macOS', 'watchOS'],
      xcframework_output_directory: 'Products',
      remove_xcarchives: true
    )
    sh("cd .. && mkdir -p #{options[:version]}")
    zip(path: "Products/#{options[:scheme]}.xcframework", output_path: "#{options[:version]}/framework.zip")
    sh("cd ../.. && echo $(cat #{options[:scheme]}.json | jq '. + {\"#{options[:version]}\": \"https://raw.githubusercontent.com/PacerApp/Dependencies/main/#{options[:scheme]}/#{options[:version]}/framework.zip\"}') > #{options[:scheme]}.json")
    sh("cd ../.. && jq . #{options[:scheme]}.json")
    sh("cd ../ && rm -rf Products")
  end

  lane :publish do |options|
    export_xcframework(scheme: "DependencyInjection", version: options[:version])
    sh("rm -rf DependencyInjection")
    sh("cd ../.. && git add . && git commit -m 'publish #{project_name} to #{options[:version]}' && git push")
  end

  private_lane :download_repo do
    sh("cd ../.. && git checkout main && git pull")
    sh("git clone https://github.com/AlbGarciam/DependencyInjection.git")
  end
end